name: iOS Build Artifacts (.app/.ipa)

on:
  workflow_dispatch:
    inputs:
      scheme:
        description: Optional scheme override (defaults to first scheme)
        required: false
        default: ''

jobs:
  build-artifacts:
    runs-on: macos-14
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Select latest installed Xcode
        run: |
          set -euo pipefail
          XCODE_PATH=$(ls -d /Applications/Xcode_*.app | sort -V | tail -n1)
          echo "Selecting $XCODE_PATH"
          sudo xcode-select -s "$XCODE_PATH"
          xcodebuild -version

      - name: Install XcodeGen
        run: |
          brew update
          brew install xcodegen@2.41 || brew install xcodegen

      - name: Generate Xcode project (from Project.yml)
        run: |
          rm -rf TaskiAI.xcodeproj
          xcodegen generate --spec Project.yml --project-root .
          test -d TaskiAI.xcodeproj

      - name: Resolve scheme
        id: resolve
        shell: bash
        run: |
          set -euo pipefail
          if [ -n "${{ github.event.inputs.scheme }}" ]; then
            echo "scheme=${{ github.event.inputs.scheme }}" >> "$GITHUB_OUTPUT"
            exit 0
          fi
          json=$(xcodebuild -list -project TaskiAI.xcodeproj -json | tr -d '\n')
          scheme=$(ruby -r json -e "j=JSON.parse(STDIN.read); puts((j['project'] && j['project']['schemes'] && j['project']['schemes'][0]) || (j['project'] && j['project']['targets'] && j['project']['targets'][0]) || 'TaskiAI')" <<< "$json")
          echo "Using scheme: $scheme"
          echo "scheme=$scheme" >> "$GITHUB_OUTPUT"

      - name: Build Release for iOS Simulator (.app)
        run: |
          set -euo pipefail
          DERIVED=build/DerivedData
          xcodebuild \
            -project TaskiAI.xcodeproj \
            -scheme "${{ steps.resolve.outputs.scheme }}" \
            -sdk iphonesimulator \
            -configuration Release \
            -destination 'generic/platform=iOS Simulator' \
            -derivedDataPath "$DERIVED" \
            CODE_SIGNING_ALLOWED=NO \
            clean build
          APP_DIR="$DERIVED/Build/Products/Release-iphonesimulator"
          APP_PATH="$APP_DIR/TaskiAI.app"
          test -d "$APP_PATH"
          (cd "$APP_DIR" && zip -r "../../../TaskiAI-Release-sim.app.zip" "$(basename "$APP_PATH")")

      - name: Attempt unsigned .ipa (archive without signing)
        shell: bash
        run: |
          set -euo pipefail
          if ! xcodebuild -project TaskiAI.xcodeproj -scheme "${{ steps.resolve.outputs.scheme }}" -configuration Release -sdk iphoneos -archivePath build/TaskiAI.xcarchive CODE_SIGNING_ALLOWED=NO SKIP_INSTALL=NO archive; then
            echo "Archive failed (likely due to signing). Skipping unsigned .ipa creation."
            exit 0
          fi
          APP_PATH="build/TaskiAI.xcarchive/Products/Applications/TaskiAI.app"
          if [ -d "$APP_PATH" ]; then
            mkdir -p build/Payload
            cp -R "$APP_PATH" build/Payload/
            (cd build && zip -r TaskiAI-unsigned.ipa Payload)
          fi

      - name: Upload simulator .app zip
        uses: actions/upload-artifact@v4
        with:
          name: TaskiAI-Release-sim-app
          path: build/DerivedData/TaskiAI-Release-sim.app.zip

      - name: Upload unsigned .ipa (if present)
        if: ${{ hashFiles('build/TaskiAI-unsigned.ipa') != '' }}
        uses: actions/upload-artifact@v4
        with:
          name: TaskiAI-unsigned-ipa
          path: build/TaskiAI-unsigned.ipa

